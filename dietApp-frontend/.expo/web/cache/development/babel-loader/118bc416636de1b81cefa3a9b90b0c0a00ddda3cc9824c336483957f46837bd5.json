{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ProgressArc from \"./components/ProgressArc\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    width = _useState2[0],\n    setWidth = _useState2[1];\n  var _useState3 = useState(2),\n    _useState4 = _slicedToArray(_useState3, 2),\n    percentage = _useState4[0],\n    setPercentage = _useState4[1];\n  var handleRandomize = function handleRandomize() {\n    var randomPercentage = Math.floor(Math.random() * 101);\n    setPercentage(randomPercentage);\n  };\n  return _jsx(SafeAreaView, {\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(ProgressArc, {\n        percentage: percentage,\n        width: width\n      }), _jsxs(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleRandomize,\n        children: [_jsx(Text, {\n          style: {\n            opacity: 0.5\n          },\n          children: \"Press me \"\n        }), _jsxs(Text, {\n          style: {\n            fontSize: 30\n          },\n          children: [100 - percentage, \"%\"]\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    flex: 1,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  arcContainer: {\n    borderStyle: 'solid',\n    borderWidth: 10,\n    borderRadius: 5,\n    borderColor: 'black',\n    height: 300,\n    width: 300\n  }\n});","map":{"version":3,"names":["StatusBar","SafeAreaView","StyleSheet","Text","TouchableOpacity","View","ProgressArc","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","width","setWidth","_useState3","_useState4","percentage","setPercentage","handleRandomize","randomPercentage","Math","floor","random","children","style","styles","container","button","onPress","opacity","fontSize","create","backgroundColor","alignItems","justifyContent","flex","position","arcContainer","borderStyle","borderWidth","borderRadius","borderColor","height"],"sources":["C:/Users/arekg/Desktop/arcGraph/arcGraph/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport ProgressArc from './components/ProgressArc';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [width, setWidth] = useState(0);\n  const [percentage, setPercentage] = useState(2);\n\n  const handleRandomize = () => {\n    const randomPercentage = Math.floor(Math.random() * 101); // Random number between 0 and 100\n    setPercentage(randomPercentage);\n  };\n  return (\n    <SafeAreaView>\n      <View style={styles.container}>\n        <ProgressArc\n          percentage={percentage}\n          width={width}\n        />\n        <TouchableOpacity\n          style={styles.button}\n          onPress={handleRandomize}\n        >\n          <Text style={{ opacity: 0.5 }}>Press me </Text>\n          <Text style={{ fontSize: 30 }}>{100 - percentage}%</Text>\n        </TouchableOpacity>\n      </View>\n      {/* <Text>hejka</Text> */}\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n    // boxShadow: `2px 2px 8px 4px rgba(0, 0, 0, 0.1)`\n  },\n  button: {\n    flex: 1,\n    position: 'absolute',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  arcContainer: {\n    borderStyle: 'solid',\n    borderWidth: 10,\n    borderRadius: 5,\n    borderColor: 'black',\n    height: 300,\n    width: 300\n  }\n});\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAQ5C,OAAOC,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA0BN,QAAQ,CAAC,CAAC,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9BG,KAAK,GAAAF,UAAA;IAAEG,QAAQ,GAAAH,UAAA;EACtB,IAAAI,UAAA,GAAoCX,QAAQ,CAAC,CAAC,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxCE,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAEhC,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACxDL,aAAa,CAACE,gBAAgB,CAAC;EACjC,CAAC;EACD,OACEd,IAAA,CAACR,YAAY;IAAA0B,QAAA,EACXhB,KAAA,CAACN,IAAI;MAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GAC5BlB,IAAA,CAACH,WAAW;QACVc,UAAU,EAAEA,UAAW;QACvBJ,KAAK,EAAEA;MAAM,CACd,CAAC,EACFL,KAAA,CAACP,gBAAgB;QACfwB,KAAK,EAAEC,MAAM,CAACE,MAAO;QACrBC,OAAO,EAAEV,eAAgB;QAAAK,QAAA,GAEzBlB,IAAA,CAACN,IAAI;UAACyB,KAAK,EAAE;YAAEK,OAAO,EAAE;UAAI,CAAE;UAAAN,QAAA,EAAC;QAAS,CAAM,CAAC,EAC/ChB,KAAA,CAACR,IAAI;UAACyB,KAAK,EAAE;YAAEM,QAAQ,EAAE;UAAG,CAAE;UAAAP,QAAA,GAAE,GAAG,GAAGP,UAAU,EAAC,GAAC;QAAA,CAAM,CAAC;MAAA,CACzC,CAAC;IAAA,CACf;EAAC,CAEK,CAAC;AAEnB;AAEA,IAAMS,MAAM,GAAG3B,UAAU,CAACiC,MAAM,CAAC;EAC/BL,SAAS,EAAE;IAETM,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAElB,CAAC;EACDP,MAAM,EAAE;IACNQ,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,UAAU;IACpBH,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDG,YAAY,EAAE;IACZC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,CAAC;IACfC,WAAW,EAAE,OAAO;IACpBC,MAAM,EAAE,GAAG;IACX9B,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}