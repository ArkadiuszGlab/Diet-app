{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ProgressArc from \"./components/ProgressArc\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(1000),\n    _useState2 = _slicedToArray(_useState, 2),\n    caloriesLeft = _useState2[0],\n    setCaloriesLeft = _useState2[1];\n  var _useState3 = useState(1000),\n    _useState4 = _slicedToArray(_useState3, 2),\n    caloriesConsumed = _useState4[0],\n    setCaloriesConsumed = _useState4[1];\n  var _useState5 = useState(2000),\n    _useState6 = _slicedToArray(_useState5, 2),\n    caloriesTotal = _useState6[0],\n    setCaloriesTotal = _useState6[1];\n  var _useState7 = useState(Math.ceil(caloriesConsumed / caloriesTotal * 100)),\n    _useState8 = _slicedToArray(_useState7, 2),\n    percentage = _useState8[0],\n    setPercentage = _useState8[1];\n  var handleRandomize = function handleRandomize() {\n    var randomDecimal2 = Math.random();\n    var randomDecimal3 = Math.random();\n    var randomConsumed = Math.floor(randomDecimal2 * (2001 - 1000)) + 1000;\n    var randomTotal = Math.floor(randomDecimal3 * (2001 - 1000)) + 1000;\n    setCaloriesConsumed(randomConsumed);\n    setCaloriesTotal(randomTotal);\n    setCaloriesLeft(randomTotal - randomConsumed);\n    setPercentage(randomConsumed / randomTotal * 100);\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.arcContainer,\n      id: \"arcContainer\",\n      children: [_jsx(ProgressArc, {\n        percentage: percentage,\n        setPercentage: setPercentage,\n        handleRandomize: handleRandomize\n      }), _jsxs(View, {\n        style: styles.caloriesColumn,\n        children: [_jsxs(Text, {\n          style: styles.topText,\n          children: [caloriesLeft, \" kcal\"]\n        }), _jsx(Text, {\n          style: styles.botText,\n          children: \"left\"\n        }), _jsxs(Text, {\n          style: styles.topText,\n          children: [caloriesConsumed, \" kcal\"]\n        }), _jsx(Text, {\n          style: styles.botText,\n          children: \"consumed\"\n        }), _jsxs(Text, {\n          style: styles.topText,\n          children: [caloriesTotal, \" kcal\"]\n        }), _jsx(Text, {\n          style: styles.botText,\n          children: \"total\"\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: 70,\n    borderStyle: 'solid',\n    borderWidth: 5\n  },\n  arcContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  caloriesColumn: {\n    justifyContent: 'space-between'\n  },\n  topText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 0\n  },\n  botText: {\n    opacity: 0.5,\n    paddingBottom: 10\n  }\n});","map":{"version":3,"names":["StatusBar","SafeAreaView","StyleSheet","Text","TouchableOpacity","View","ProgressArc","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","caloriesLeft","setCaloriesLeft","_useState3","_useState4","caloriesConsumed","setCaloriesConsumed","_useState5","_useState6","caloriesTotal","setCaloriesTotal","_useState7","Math","ceil","_useState8","percentage","setPercentage","handleRandomize","randomDecimal2","random","randomDecimal3","randomConsumed","floor","randomTotal","style","styles","container","children","arcContainer","id","caloriesColumn","topText","botText","create","flex","backgroundColor","alignContent","justifyContent","padding","borderStyle","borderWidth","flexDirection","fontWeight","fontSize","opacity","paddingBottom"],"sources":["C:/Users/arekg/Desktop/arcGraph/arcGraph/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport {\n  SafeAreaView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View\n} from 'react-native';\nimport ProgressArc from './components/ProgressArc';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [caloriesLeft, setCaloriesLeft] = useState(1000);\n  const [caloriesConsumed, setCaloriesConsumed] = useState(1000);\n  const [caloriesTotal, setCaloriesTotal] = useState(2000);\n  const [percentage, setPercentage] = useState(\n    Math.ceil((caloriesConsumed / caloriesTotal) * 100)\n  );\n  const handleRandomize = () => {\n    var randomDecimal2 = Math.random();\n    var randomDecimal3 = Math.random();\n    const randomConsumed = Math.floor(randomDecimal2 * (2001 - 1000)) + 1000;\n    const randomTotal = Math.floor(randomDecimal3 * (2001 - 1000)) + 1000;\n    setCaloriesConsumed(randomConsumed);\n    setCaloriesTotal(randomTotal);\n    setCaloriesLeft(randomTotal - randomConsumed);\n    setPercentage((randomConsumed / randomTotal) * 100);\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View\n        style={styles.arcContainer}\n        id=\"arcContainer\"\n      >\n        <ProgressArc\n          percentage={percentage}\n          setPercentage={setPercentage}\n          handleRandomize={handleRandomize}\n        />\n        <View style={styles.caloriesColumn}>\n          <Text style={styles.topText}>{caloriesLeft} kcal</Text>\n          <Text style={styles.botText}>left</Text>\n          <Text style={styles.topText}>{caloriesConsumed} kcal</Text>\n          <Text style={styles.botText}>consumed</Text>\n          <Text style={styles.topText}>{caloriesTotal} kcal</Text>\n          <Text style={styles.botText}>total</Text>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#ffffff',\n    alignContent: 'center',\n    justifyContent: 'center',\n    padding: 70,\n    borderStyle: 'solid',\n    borderWidth: 5\n  },\n  arcContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  caloriesColumn: {\n    justifyContent: 'space-between'\n  },\n  topText: {\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 0\n  },\n  botText: {\n    opacity: 0.5,\n    paddingBottom: 10\n  }\n});\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAQ5C,OAAOC,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAwCN,QAAQ,CAAC,IAAI,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA/CG,YAAY,GAAAF,UAAA;IAAEG,eAAe,GAAAH,UAAA;EACpC,IAAAI,UAAA,GAAgDX,QAAQ,CAAC,IAAI,CAAC;IAAAY,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAvDE,gBAAgB,GAAAD,UAAA;IAAEE,mBAAmB,GAAAF,UAAA;EAC5C,IAAAG,UAAA,GAA0Cf,QAAQ,CAAC,IAAI,CAAC;IAAAgB,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAjDE,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EACtC,IAAAG,UAAA,GAAoCnB,QAAQ,CAC1CoB,IAAI,CAACC,IAAI,CAAER,gBAAgB,GAAGI,aAAa,GAAI,GAAG,CACpD,CAAC;IAAAK,UAAA,GAAAd,cAAA,CAAAW,UAAA;IAFMI,UAAU,GAAAD,UAAA;IAAEE,aAAa,GAAAF,UAAA;EAGhC,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAIC,cAAc,GAAGN,IAAI,CAACO,MAAM,CAAC,CAAC;IAClC,IAAIC,cAAc,GAAGR,IAAI,CAACO,MAAM,CAAC,CAAC;IAClC,IAAME,cAAc,GAAGT,IAAI,CAACU,KAAK,CAACJ,cAAc,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI;IACxE,IAAMK,WAAW,GAAGX,IAAI,CAACU,KAAK,CAACF,cAAc,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI;IACrEd,mBAAmB,CAACe,cAAc,CAAC;IACnCX,gBAAgB,CAACa,WAAW,CAAC;IAC7BrB,eAAe,CAACqB,WAAW,GAAGF,cAAc,CAAC;IAC7CL,aAAa,CAAEK,cAAc,GAAGE,WAAW,GAAI,GAAG,CAAC;EACrD,CAAC;EAED,OACE7B,IAAA,CAACR,YAAY;IAACsC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EACpC/B,KAAA,CAACN,IAAI;MACHkC,KAAK,EAAEC,MAAM,CAACG,YAAa;MAC3BC,EAAE,EAAC,cAAc;MAAAF,QAAA,GAEjBjC,IAAA,CAACH,WAAW;QACVwB,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BC,eAAe,EAAEA;MAAgB,CAClC,CAAC,EACFrB,KAAA,CAACN,IAAI;QAACkC,KAAK,EAAEC,MAAM,CAACK,cAAe;QAAAH,QAAA,GACjC/B,KAAA,CAACR,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACM,OAAQ;UAAAJ,QAAA,GAAE1B,YAAY,EAAC,OAAK;QAAA,CAAM,CAAC,EACvDP,IAAA,CAACN,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACO,OAAQ;UAAAL,QAAA,EAAC;QAAI,CAAM,CAAC,EACxC/B,KAAA,CAACR,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACM,OAAQ;UAAAJ,QAAA,GAAEtB,gBAAgB,EAAC,OAAK;QAAA,CAAM,CAAC,EAC3DX,IAAA,CAACN,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACO,OAAQ;UAAAL,QAAA,EAAC;QAAQ,CAAM,CAAC,EAC5C/B,KAAA,CAACR,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACM,OAAQ;UAAAJ,QAAA,GAAElB,aAAa,EAAC,OAAK;QAAA,CAAM,CAAC,EACxDf,IAAA,CAACN,IAAI;UAACoC,KAAK,EAAEC,MAAM,CAACO,OAAQ;UAAAL,QAAA,EAAC;QAAK,CAAM,CAAC;MAAA,CACrC,CAAC;IAAA,CACH;EAAC,CACK,CAAC;AAEnB;AAEA,IAAMF,MAAM,GAAGtC,UAAU,CAAC8C,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,SAAS;IAC1BC,YAAY,EAAE,QAAQ;IACtBC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,OAAO;IACpBC,WAAW,EAAE;EACf,CAAC;EACDZ,YAAY,EAAE;IACZa,aAAa,EAAE,KAAK;IACpBJ,cAAc,EAAE;EAClB,CAAC;EACDP,cAAc,EAAE;IACdO,cAAc,EAAE;EAClB,CAAC;EACDN,OAAO,EAAE;IACPW,UAAU,EAAE,MAAM;IAClBC,QAAQ,EAAE,EAAE;IACZL,OAAO,EAAE;EACX,CAAC;EACDN,OAAO,EAAE;IACPY,OAAO,EAAE,GAAG;IACZC,aAAa,EAAE;EACjB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}