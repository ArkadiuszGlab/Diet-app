{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ProgressArc from \"./components/ProgressArc\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(75),\n    _useState2 = _slicedToArray(_useState, 2),\n    percentage = _useState2[0],\n    setPercentage = _useState2[1];\n  var handleRandomize = function handleRandomize() {\n    var randomPercentage = Math.floor(Math.random() * 101);\n    setPercentage(randomPercentage);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ProgressArc, {\n      percentage: percentage\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleRandomize,\n      children: _jsx(Text, {\n        children: \"Press me\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    flex: 1,\n    position: 'absolute',\n    backgroundColor: 'lightblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 100,\n    width: 100\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","TouchableOpacity","View","ProgressArc","useState","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","percentage","setPercentage","handleRandomize","randomPercentage","Math","floor","random","style","styles","container","children","button","onPress","create","flex","backgroundColor","alignItems","justifyContent","position","height","width"],"sources":["C:/Users/arekg/Desktop/arcGraph/arcGraph/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport ProgressArc from './components/ProgressArc';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [percentage, setPercentage] = useState(75);\n  const handleRandomize = () => {\n    const randomPercentage = Math.floor(Math.random() * 101); // Random number between 0 and 100\n    setPercentage(randomPercentage);\n  };\n  return (\n    <View style={styles.container}>\n      <ProgressArc percentage={percentage} />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={handleRandomize}\n      >\n        <Text>Press me</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    flex: 1,\n    position: 'absolute',\n    backgroundColor: 'lightblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 100,\n    width: 100\n  }\n});\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAoCN,QAAQ,CAAC,EAAE,CAAC;IAAAO,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACxDL,aAAa,CAACE,gBAAgB,CAAC;EACjC,CAAC;EACD,OACER,KAAA,CAACN,IAAI;IAACkB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5BjB,IAAA,CAACH,WAAW;MAACU,UAAU,EAAEA;IAAW,CAAE,CAAC,EACvCP,IAAA,CAACL,gBAAgB;MACfmB,KAAK,EAAEC,MAAM,CAACG,MAAO;MACrBC,OAAO,EAAEV,eAAgB;MAAAQ,QAAA,EAEzBjB,IAAA,CAACN,IAAI;QAAAuB,QAAA,EAAC;MAAQ,CAAM;IAAC,CACL,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGtB,UAAU,CAAC2B,MAAM,CAAC;EAC/BJ,SAAS,EAAE;IACTK,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDN,MAAM,EAAE;IACNG,IAAI,EAAE,CAAC;IACPI,QAAQ,EAAE,UAAU;IACpBH,eAAe,EAAE,WAAW;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBE,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE;EACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}