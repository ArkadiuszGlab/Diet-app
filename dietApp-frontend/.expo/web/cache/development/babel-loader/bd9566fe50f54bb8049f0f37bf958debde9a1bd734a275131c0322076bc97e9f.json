{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ProgressArc from \"./components/ProgressArc\";\nimport { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(2),\n    _useState2 = _slicedToArray(_useState, 2),\n    percentage = _useState2[0],\n    setPercentage = _useState2[1];\n  var handleRandomize = function handleRandomize() {\n    var randomPercentage = Math.floor(Math.random() * 101);\n    setPercentage(randomPercentage);\n  };\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.test\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    flex: 1,\n    position: 'absolute',\n    backgroundColor: 'lightblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 100,\n    width: 100\n  },\n  test: {\n    flex: 1,\n    border: 'solid 5'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","TouchableOpacity","View","ProgressArc","useState","jsx","_jsx","App","_useState","_useState2","_slicedToArray","percentage","setPercentage","handleRandomize","randomPercentage","Math","floor","random","style","styles","container","children","test","create","flex","backgroundColor","alignItems","justifyContent","button","position","height","width","border"],"sources":["C:/Users/arekg/Desktop/arcGraph/arcGraph/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport ProgressArc from './components/ProgressArc';\nimport { useState } from 'react';\n\nexport default function App() {\n  const [percentage, setPercentage] = useState(2);\n  const handleRandomize = () => {\n    const randomPercentage = Math.floor(Math.random() * 101); // Random number between 0 and 100\n    setPercentage(randomPercentage);\n  };\n  return (\n    <View style={styles.container}>\n      {/* <ProgressArc percentage={percentage} />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={handleRandomize}\n      >\n        <Text>Press me</Text>\n      </TouchableOpacity> */}\n      <View style={styles.test}></View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n    // flexDirection: 'column'\n  },\n  button: {\n    flex: 1,\n    position: 'absolute',\n    backgroundColor: 'lightblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 100,\n    width: 100\n  },\n  test: {\n    flex: 1,\n    border: 'solid 5'\n  }\n});\n\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAE5C,OAAOC,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEjC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAAoCJ,QAAQ,CAAC,CAAC,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAMI,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5B,IAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACxDL,aAAa,CAACE,gBAAgB,CAAC;EACjC,CAAC;EACD,OACER,IAAA,CAACJ,IAAI;IAACgB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAQ5Bf,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACG;IAAK,CAAO;EAAC,CAC7B,CAAC;AAEX;AAEA,IAAMH,MAAM,GAAGpB,UAAU,CAACwB,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAElB,CAAC;EACDC,MAAM,EAAE;IACNJ,IAAI,EAAE,CAAC;IACPK,QAAQ,EAAE,UAAU;IACpBJ,eAAe,EAAE,WAAW;IAC5BC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBG,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE;EACT,CAAC;EACDT,IAAI,EAAE;IACJE,IAAI,EAAE,CAAC;IACPQ,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}